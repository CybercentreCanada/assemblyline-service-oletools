name: Oletools
version: 1
description: >-
  This service extracts metadata, network information and reports anomalies in
  Microsoft OLE and XML documents using the Python library py-oletools by Philippe
  Lagadec - http://www.decalage.info.

accepts: document/office/.*|code/xml
rejects: empty|metadata/.*

stage: CORE
category: Static Analysis

file_required: true
timeout: 60
disable_cache: false

enabled: true
is_external: false
licence_count: 0

config:
  macro_score_max_file_size: 5242880  # 5 * 1024**2
  macro_score_min_alert: 0.6
  metadata_size_to_extract: 500

heuristics:
  - heur_id: 1
    name: Info
    score: 10
    filetype: '*'
    description: Yara rule - Info group

  - heur_id: 2
    name: Technique
    score: 100
    filetype: '*'
    description: Yara rule - Technique group

  - heur_id: 3
    name: Exploit
    score: 500
    filetype: '*'
    description: Yara rule - Exploit group

  - heur_id: 4
    name: Tool
    score: 1000
    filetype: '*'
    description: Yara rule - Tool group

  - heur_id: 5
    name: Malware
    score: 1000
    filetype: '*'
    description: Yara rule - Malware group

docker_config:
  image: cccs/assemblyline-service-oletools:latest
  cpu_cores: 0.5
  ram_mb: 1024

update_config:
  generates_signatures: true
  method: run
  run_options:
    allow_internet_access: true
    command: ["python", "-m", "yara_.yara_updater"]
    image: cccs/assemblyline-service-yara:latest
  update_interval_seconds: 3600



####################
AL_Oletools_001 = Heuristic("AL_Oletools_001", "Attached Document Template", "document/office",
                                dedent("""\
                                       /Attached template specified in xml relationships (pointing to external source).
                                       This can be used for malicious purposes.
                                       """))
    AL_Oletools_002 = Heuristic("AL_Oletools_002", "Multi-embedded documents", "document/office",
                                dedent("""\
                                       File contains both old OLE format and new ODF format. This can be
                                        used to obfuscate malicious content.
                                       """))
    AL_Oletools_003 = Heuristic("AL_Oletools_003", "Massive document", "document/office",
                                dedent("""\
                                       File contains parts which are massive. Could not scan entire document.
                                       """))
    AL_Oletools_004 = Heuristic("AL_Oletools_004", "Pcode and macros content differ", "document/office",
                                dedent("""\
                                       all_pcode dump contains suspicious content not in all_vba dump. Indicates
                                       possible VBA stomping.
                                       """))
    AL_Oletools_005 = Heuristic("AL_Oletools_005", "Flash content in OLE", "document/office/ole",
                                dedent("""\
                                       Flash object detected in OLE stream.
                                       """))
    AL_Oletools_006 = Heuristic("AL_Oletools_006", "Hex content in OLE", "document/office/ole",
                                dedent("""\
                                       Found large chunk of VBA hex notation in OLE.
                                       """))
    AL_Oletools_007 = Heuristic("AL_Oletools_007", "IOC in XML", "document/office",
                                dedent("""\
                                       IOC content discovered in compressed XML.
                                       """))
    AL_Oletools_008 = Heuristic("AL_Oletools_008", "B64 in XML", "document/office",
                                dedent("""\
                                       Base64 content discovered in compressed XML.
                                       """))
    AL_Oletools_009 = Heuristic("AL_Oletools_009", "IOC in OLE", "document/office",
                                dedent("""\
                                       IOC content discovered in OLE Object.
                                       """))
    AL_Oletools_010 = Heuristic("AL_Oletools_010", "B64 in OLE", "document/office",
                                dedent("""\
                                       Base64 content discovered in OLE Object.
                                       """))
    AL_Oletools_011 = Heuristic("AL_Oletools_011", "Suspicious Embedded RTF", "document/office",
                                dedent("""\
                                       Malicious properties discovered in embedded RTF object(s).
                                       """))
    AL_Oletools_012 = Heuristic("AL_Oletools_012", "Suspicious Embedded Link", "document/office",
                                dedent("""\
                                       Malicious properties discovered in embedded link object(s).
                                       """))
    AL_Oletools_013 = Heuristic("AL_Oletools_013", "Suspicious Unknown Object", "document/office",
                                dedent("""\
                                       Malicious properties discovered in embedded object(s) of unknown type.
                                       """))
    AL_Oletools_014 = Heuristic("AL_Oletools_014", "DDE Link Extracted", "document/office",
                                dedent("""\
                                       DDE link object extracted.
                                       """))
    AL_Oletools_015 = Heuristic("AL_Oletools_015", "Suspicious DDE Link", "document/office",
                                dedent("""\
                                       Suspicious properties discovered in DDE link object.
                                       """))
    AL_Oletools_016 = Heuristic("AL_Oletools_016", "Large Metadata Extracted", "document/office",
                                dedent("""\
                                       Large metadata content extracted for analysis.
                                       """))
    AL_Oletools_017 = Heuristic("AL_Oletools_017", "Thumbnail Extracted", "document/office",
                                dedent("""\
                                       Embedded thumbnail from OLE metadata extracted.
                                       """))
    AL_Oletools_018 = Heuristic("AL_Oletools_018", "Large malformed OLE Object Extracted", "document/office",
                                dedent("""\
                                       Large malformed OLE object extracted from sample.
                                       """))